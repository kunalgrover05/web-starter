{"version":3,"sources":["utils/constants.js","utils/apollo.js","graphql/initializeCache.js","graphql/fragments.js","graphql/queries.js","components/SearchPage/MapPage.js","components/SearchPage/RestTile.js","components/SearchPage/LocationSearch.js","components/SearchPage/MyLocation.js","components/SearchPage/index.js","components/RestPage/RestDetails.js","components/RestPage/index.js","App.js","utils/routes.js","serviceWorker.js","Theme.js","index.js"],"names":["httpLink","createHttpLink","uri","client","ApolloClient","link","cache","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","InMemoryCache","initializeCache","ResponseStatusFields","gql","_templateObject","RestaurantReferenceFields","_templateObject2","RestaurantFields","_templateObject3","RESTAURANT_SEARCH_QUERY","queries_templateObject","FRAGMENTS","RESTAURANT_QUERY","queries_templateObject2","MapContainer","console","log","this","setState","zoomToMarkers","map","bounds","window","google","maps","LatLngBounds","props","children","forEach","child","type","Marker","extend","LatLng","position","lat","lng","fitBounds","process","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","coordsArray","Symbol","iterator","next","done","coord","value","err","return","react_default","a","createElement","dist","style","width","height","ref","zoom","index","key","React","Component","MapPage","GoogleApiWrapper","apiKey","RestTile","padding","Grid_default","container","spacing","background","boxShadow","borderRadius","item","xs","paddingBottom","index_es","color","icon","Link","textDecoration","to","concat","rest","id","fontSize","fontWeight","title","paddingTop","cuisine","references","length","site_name","images","float","src","lineHeight","open_closed","rating","LocationSearch","_React$Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","searchCallback","bind","assertThisInitialized","handleChange","inherits","createClass","root","display","alignItems","marginLeft","input","flex","iconButton","divider","margin","e","callback","preventDefault","event","target","onSubmit","Paper_default","className","elevation","IconButton_default","aria-label","Menu_default","InputBase_default","placeholder","onChange","Search_default","MyLocation","getLocation","_this2","navigator","geolocation","getCurrentPosition","pos","coords","receivedLocation","latitude","longitude","core_index_es","textTransform","onClick","SearchPage","updateLocation","address","lon","react_apollo_browser_umd","query","variables","_ref","loading","error","_ref$data","data","CircularProgress_default","search_restaurants","results","x","backgroundColor","left","zIndex","MyLocation_MyLocation","LocationSearch_LocationSearch","overflowY","r","RestTile_RestTile","RestDetails","restId","restaurant","JSON","stringify","RestPage","match","params","RestPage_RestDetails","library","add","faMapMarkerAlt","faStar","faWalking","faCircle","App","Switch","Route","exact","path","component","ROUTES","Boolean","location","hostname","palette","common","black","white","paper","default","primary","light","main","dark","contrastText","bright","brightHover","emphasize","secondary","text","disabled","hint","button","standard","createMuiTheme","unit","typography","useNextVariants","overrides","MuiDivider","DEFAULT_SPACING","MuiSpeedDialAction","&:hover","MuiChip","colorPrimary","MuiButton","contained","containedPrimary","MuiIconButton","MuiAvatar","colorDefault","moment","updateLocale","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","ReactDOM","render","styles","theme","HashRouter","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92f626f6.chunk.js","sourcesContent":["export const BACKEND_HOST = 'https://food.act.today/graphql';\n","// import { getCurrentUserFromLocalStorage } from '../utils/localStorage';\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport initializeCache from '../graphql/initializeCache';\nimport { BACKEND_HOST } from './constants';\n\nconst httpLink = createHttpLink({\n  uri: BACKEND_HOST\n});\n\nexport const client = new ApolloClient({\n  link: httpLink,\n  cache: initializeCache(),\n});\n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\n\nimport introspectionQueryResultData from './fragmentTypes.json';\n\nexport default function initializeCache() {\n  const fragmentMatcher = new IntrospectionFragmentMatcher({\n    introspectionQueryResultData\n  });\n\n  return new InMemoryCache({ fragmentMatcher });\n}\n","import { gql } from 'apollo-boost';\n\nexport const ResponseStatusFields = gql`\n  fragment ResponseStatusFields on ResponseStatus {\n    status\n    error\n    error_code\n  }\n`;\n\nexport const RestaurantReferenceFields = gql`\n  fragment RestaurantReferenceFields on RestaurantReference {\n    rest_url\n    site\n    url\n    site_name\n  }\n`;\n\nexport const RestaurantFields = gql`\n  ${RestaurantReferenceFields}\n\n  fragment RestaurantFields on Restaurant {\n    type\n    id\n    address\n    country\n    cuisine\n    description\n    distance\n    hours\n    hours_source\n    images\n    ios_url\n    lat\n    lon\n    opentable_id\n    opentable_url\n    open_closed\n    phone\n    rating\n    references {\n      ...RestaurantReferenceFields\n    }\n    region\n    reviews\n    street_address\n    title\n    url\n    zip\n  }\n`;\n","import { gql } from 'apollo-boost';\n\nimport * as FRAGMENTS from './fragments';\n\nexport const RESTAURANT_SEARCH_QUERY = gql`\n${FRAGMENTS.ResponseStatusFields}\n${FRAGMENTS.RestaurantFields}\n\nquery search_restaurants($address: String, $lat: String, $lon: String) {\n  search_restaurants(address: $address, lat: $lat, lon: $lon) {\n    response_status {\n      ...ResponseStatusFields\n    }\n    total_results\n    results {\n      ...RestaurantFields\n    }\n  }\n}\n`;\n\nexport const RESTAURANT_QUERY = gql`\n${FRAGMENTS.RestaurantFields}\n\nquery restaurant($id: String!) {\n  restaurant(id: $id) {\n    ...RestaurantFields\n  }\n}\n`;\n","import { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport React from 'react';\n\n\nclass MapContainer extends React.Component {\n  componentDidMount() {\n    console.log(\"Mount complete\")\n    this.setState({\n\n        zoomToMarkers: map => {\n            //console.log(\"Zoom to markers\");\n            const bounds = new window.google.maps.LatLngBounds();\n            map.props.children.forEach((child) => {\n                if (child.type === Marker) {\n                    bounds.extend(new window.google.maps.LatLng(child.props.position.lat, child.props.position.lng));\n                }\n            })\n            map.fitBounds(bounds);\n        }\n    })\n}\n\n  render() {\n    console.log(\"KEy\", process.env.REACT_APP_GOOGLE_API_KEY);\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n\n    const bounds = new window.google.maps.LatLngBounds();\n    for (var coord of this.props.coordsArray) {\n      console.log(coord);\n      bounds.extend(coord);\n    }\n\n    return (\n        <Map style={style}\n          ref='map'\n          google={this.props.google} zoom={14} bounds={bounds}>\n          {this.props.coordsArray.map((coord, index) =>\n            <Marker key={index} position={coord}>\n            </Marker>\n          )}\n        </Map>\n    );\n  };\n}\n\nexport const MapPage = GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY\n})(MapContainer)\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const RestTile = (props) => {\n    return (\n        <div style={{ padding: '30px' }}>\n            <Grid container spacing={24} style={{ background: 'white', height: '120px', boxShadow: '1px 1px 0 0 #ccc', borderRadius: '12px' }}>\n                <Grid item xs={9}>\n                    <div style={{ padding: '10px', paddingBottom: '3px' }}><FontAwesomeIcon style={{ color: '#558BF7' }} icon=\"map-marker-alt\" />\n                        <Link style={{ textDecoration: 'none' }} to={`/rest/${props.rest.id}`}>\n                            <span style={{ fontSize: '18px', fontWeight: '500', color: 'black' }}> {props.rest.title}</span>\n                        </Link>\n                    </div>\n\n                    <div style={{ padding: '10px', paddingTop: '0px', color: '#558BF7', fontWeight: '400' }}>{props.rest.cuisine}</div>\n                    {\n                        props.rest.references && props.rest.references.length > 0 ?\n                            <div style={{ padding: '10px' }}>\n                                <FontAwesomeIcon icon=\"star\" />  Featured in {props.rest.references[0].site_name}\n                                {props.rest.references.length > 1 ?\n                                    <span>.. +{props.rest.references.length - 1}</span>\n                                    : ''\n                                }\n                            </div> : ''\n                    }\n                </Grid>\n                {props.rest.images && props.rest.images.length > 0 ?\n                    <Grid item xs={3} style={{ padding: '0px' }}>\n                        <img style={{ height: '100%', width: '100%', float: 'right', borderRadius: '0 12px 12px 0' }} src={props.rest.images[0]} />\n                    </Grid>\n                    : ''\n                }\n            </Grid>\n            <Grid container spacing={24} style={{ paddingTop: '10px' }}>\n                <Grid item xs={8} style={{ color: '#558BF7', lineHeight: '20px' }}>\n                    <span>{props.rest.open_closed}</span>\n                    <FontAwesomeIcon style={{fontSize: '4px', padding: '4px 12px 4px 12px'}} icon=\"circle\" />\n                    <span>3.3 miles away</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <span style={{fontSize: '18px', fontWeight: 'bold'}}><FontAwesomeIcon  style={{ color: '#558BF7' }} icon=\"walking\" /> 12</span>\n                    <span style={{fontSize: '14px'}}>min</span>\n                    <span style={{float: 'right', fontSize: '14px', lineHeight: '20px'}}>/5</span>\n                    <span style={{float: 'right', fontSize: '18px', fontWeight: 'bold', lineHeight: '20px'}}><FontAwesomeIcon  style={{ color: '#558BF7' }} icon=\"star\" /> {props.rest.rating}</span>\n                </Grid>\n            </Grid>\n        </div>\n    );\n\n} ","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nexport class LocationSearch extends React.Component {\n    styles() {\n        return {\n            root: {\n                padding: '2px 4px',\n                display: 'flex',\n                alignItems: 'center',\n                width: 400,\n                height: '40px',\n                borderRadius: '20px',\n                marginLeft: '20px'\n            },\n            input: {\n                marginLeft: 8,\n                flex: 1,\n            },\n            iconButton: {\n                padding: 10,\n            },\n            divider: {\n                width: 1,\n                height: 28,\n                margin: 4,\n            },\n        }\n    }\n    constructor(props) {\n        super(props);\n\n        this.state = { value: props.value };\n        this.searchCallback = this.searchCallback.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    searchCallback(e) {\n        console.log(\"Callback\");\n        this.props.callback(this.state.value);\n        e.preventDefault();\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n\n    render() {\n        return (\n            <form onSubmit={this.searchCallback}>\n                <Paper className='root' elevation={1}>\n                    <IconButton className='iconButton' aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <InputBase className='input' placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\n                    <IconButton className='iconButton' type='submit' aria-label=\"Search\">\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n\n            </form>\n        )\n    }\n} ","import { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport class MyLocation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    getLocation() {\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((pos) => {\n                const coords = pos.coords;\n                this.props.receivedLocation({\n                    lat: coords.latitude,\n                    lng: coords.longitude\n                });\n            })\n        }\n    }\n\n    render() {\n        return <Button style={{ 'background': 'linear-gradient(to left,#D98248, #EBBE71)', padding: '6px 36px', borderRadius: '20px', height: '40px', textTransform: 'none', color: 'white'}} onClick={this.getLocation}>\n                  <FontAwesomeIcon style={{ padding: '4px' }} icon=\"map-marker-alt\" /> Use my location</Button>\n    }\n}","import React, { Component, View } from 'react';\n\nimport { Query } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RESTAURANT_SEARCH_QUERY } from '../../graphql/queries';\nimport { MapPage } from './MapPage';\nimport { RestTile } from './RestTile';\nimport { LocationSearch } from './LocationSearch';\nimport { MyLocation } from './MyLocation';\nimport Grid from '@material-ui/core/Grid';\n\nclass SearchPage extends Component {\n  constructor() {\n    super();\n\n    this.updateLocation = this.updateLocation.bind(this);\n    this.receivedLocation = this.receivedLocation.bind(this);\n    this.state = {\n      address: 'Chicago',\n      lat: null,\n      lon: null\n    }\n  }\n\n  updateLocation(value) {\n    console.log(\"Update location called\");\n    console.log(value);\n\n    this.setState({\n      lat: null,\n      lon: null,\n      address: value\n    });\n  }\n\n  receivedLocation(value) {\n    console.log(\"Location received\");\n    console.log(value);\n\n    this.setState({\n      address: '',\n      lat: value.lat,\n      lon: value.lng\n    })\n  }\n\n  render() {\n    return (\n      // Variables can be either lat and lon OR address\n      <Query\n        query={RESTAURANT_SEARCH_QUERY}\n        variables={this.state}\n      >\n        {({ loading, error, data = {} }) => {\n          if (loading) {\n            return <CircularProgress />;\n          }\n\n          console.log('DO SOMETHING SMART WITH THIS DATA');\n          console.log('data', data);\n          console.log('error', error);\n\n          const coordsArray = data.search_restaurants.results.map(x => {\n            return {\n              lat: x.lat,\n              lng: x.lon\n            }\n          });\n\n          // Make sure we have data\n          if (\n            data.search_restaurants\n            && data.search_restaurants.results\n            && data.search_restaurants.results.length > 0\n          ) {\n            return (\n              <Grid container style={{ backgroundColor: '#E9F0F9' }}>\n                <div style={{ position: 'absolute', left: '45%', zIndex: 1024 }}>\n                  <div style={{ float: 'left', display: 'inlineBlock' }} >\n                    <MyLocation receivedLocation={this.receivedLocation}></MyLocation>\n                  </div>\n                  <div style={{ float: 'left', display: 'inlineBlock' }} >\n                    <LocationSearch value={this.state.address} callback={this.updateLocation}></LocationSearch>\n                  </div>\n                </div>\n                <Grid item xs={4} style={{ height: '100%', overflowY: 'scroll' }}>\n                  {data.search_restaurants.results.map((r) => {\n                    return <RestTile key={r.id} rest={r}></RestTile>\n                  })}\n\n                </Grid>\n                <Grid item xs={8}>\n                  <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n                    <MapPage coordsArray={coordsArray}></MapPage>\n                  </div>\n                </Grid>\n\n              </Grid>\n            );\n          }\n\n          // No Data Return\n          return <div>No Results</div>;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component } from 'react';\n\nimport { Query } from 'react-apollo';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RESTAURANT_QUERY } from '../../graphql/queries';\n\nclass RestDetails extends Component {\n  render() {\n    const { restId } = this.props;\n\n    return (\n      <Query\n        query={RESTAURANT_QUERY}\n        variables={{\n          id: restId\n        }}\n      >\n        {({ loading, error, data = {} }) => {\n          if (loading) {\n            return <CircularProgress />;\n          }\n\n          console.log('DO SOMETHING SMART WITH THIS DATA');\n          console.log('data', data);\n          console.log('error', error);\n\n          // Make sure we have data\n          if (data.restaurant) {\n            return (\n              <div className=\"rest-page\">\n                {JSON.stringify(data.restaurant)}\n              </div>\n            );\n          }\n\n          // No Data Return\n          return <div>No Rest Data</div>;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default RestDetails;\n","import React, { Component } from 'react';\n\nimport RestDetails from './RestDetails';\n\nclass RestPage extends Component {\n  render() {\n    const { match: { params: { id } } } = this.props;\n\n    return (\n      <div>\n        {/* This is the rest page: { id } */}\n\n        <RestDetails restId={id} />\n      </div>\n    );\n  }\n}\n\nexport default RestPage;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport SearchPage from './components/SearchPage';\nimport RestPage from './components/RestPage';\n\nimport * as ROUTES from './utils/routes';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faMapMarkerAlt, faStar, faWalking, faCircle } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faMapMarkerAlt, faStar, faWalking, faCircle);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path={ROUTES.SEARCH} component={SearchPage} />\n          <Route exact path={ROUTES.REST + '/:id'} component={RestPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const SEARCH = '/';\nexport const REST = '/rest';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst DEFAULT_SPACING = 8;\n\nconst palette = {\n  common: {\n    black: '#000',\n    white: '#FFF',\n  },\n  background: {\n    paper: '#fff',\n    default: '#fbf8f5'\n  },\n  primary: {\n    light: '#462864',\n    main: '#231632',\n    dark: 'rgba(32, 22, 44, 1)',\n    contrastText: '#fff',\n    bright: '#8930fd',\n    brightHover: emphasize('#8930fd', 0.15)\n  },\n  secondary: {\n    light: '#ff4081',\n    main: '#ff146e',\n    dark: '#c51162',\n    contrastText: '#fff'\n  },\n  error: {\n    light: '#E57373',\n    main: '#D0021B',\n    dark: '#D32F2F',\n    contrastText: '#fff'\n  },\n  text: {\n    primary: '#231632',\n    secondary: '#bcbabf',\n    disabled: 'rgba(0, 0, 0, 1)',\n    hint: 'rgba(218, 212, 237, 1)'\n  },\n  button: {\n    standard: '#dfdaf0',\n  }\n};\n\nexport default createMuiTheme({\n  palette,\n  spacing: {\n    unit: DEFAULT_SPACING\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiDivider: {\n      root: {\n        margin: `0px ${DEFAULT_SPACING * 2}px`\n      }\n    },\n    MuiSpeedDialAction: {\n      button: {\n        color: palette.primary.main,\n        backgroundColor: palette.button.standard,\n        '&:hover': {\n          backgroundColor: emphasize(palette.button.standard, 0.15),\n        },\n      }\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: palette.button.standard,\n      },\n      colorPrimary: {\n        backgroundColor: palette.primary.light,\n        '&:hover': {\n          backgroundColor: emphasize(palette.primary.light, 0.15),\n        },\n      }\n    },\n    MuiButton: {\n      contained: {\n        backgroundColor: palette.button.standard,\n        color: palette.text.primary\n      },\n      containedPrimary: {\n        backgroundColor: palette.primary.light,\n        '&:hover': {\n          backgroundColor: emphasize(palette.primary.light, 0.15),\n        },\n      }\n    },\n    MuiIconButton: {\n      colorPrimary: {\n        color: palette.primary.light\n      }\n    },\n    MuiAvatar: {\n      colorDefault: {\n        backgroundColor: palette.button.standard,\n        color: palette.primary.main\n      },\n    }\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport moment from 'moment';\n\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { ApolloProvider } from 'react-apollo';\nimport { client } from './utils/apollo';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport theme from './Theme';\n\nimport 'typeface-roboto';\n// import { setContext } from 'apollo-link-context';\n// import Cookies from 'universal-cookie';\n\n\n// Configure moment to use shorthand relative time\nmoment.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: '%ds',\n    ss: '%ds',\n    m: '%dm',\n    mm: '%dm',\n    h: '%dh',\n    hh: '%dh',\n    d: '%dd',\n    dd: '%dd',\n    M: '%dm',\n    MM: '%dm',\n    y: '%dy',\n    yy: '%dy'\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <HashRouter>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </HashRouter>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}